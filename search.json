[{"title":"Deep Learning Roadmap","url":"/2020/04/28/deep_learning_road_map/","content":"\n# CV\n- [ ] 图形分类\n- [ ] 目标检测\n- [ ] 语义分割\n- [ ] 实例分割\n\n# 基础网络架构\n\n## 经典网络\n- [ ] VGG16\n- [ ] ResNet\n- [ ] GoogLeNet\n- [ ] DenseNet\n- [ ] EfficientNet\n## 轻量级网络\n- [ ] ShuffleNet\n- [ ] MobileNet\n\n# 经典目标检测算法\n\n## Two Stage\n- [ ] RCNN, Faster RCNN, Faster RCNN\n\n## One Stage\n- [ ] SSD\n- [ ] YOLO\n- [ ] RetinaNet\n- [ ] FCOS\n "},{"title":"买卖股票","url":"/2020/04/25/lc-stock-problems/","content":"# 通用解法\n## 定义状态\n    dp[i][k][c] -> i：天数， k：最大交易次数， c：持有股票状态（0不持有，1持有）\n- 示例1： dp[6][2][0]： 第6天最多交易了2次，手中不持有股票（0）, 此时最大的收益\n- 示例2： dp[23][3][1]: 第23天最多交易了3次，手中持有股票（1），此时最大的收益\n- 最终状态： dp[n][1][0], 第n天最多进行了1此交易，手中不持有股票\n## 状态转移方程\n- 情形一（第i天不持有股票）: \n    dp[i][k][0]  =  max(dp[i-1][k][0], dp[i-1][k][1] + prices[i]) 分别为（第i-1天就未持有股票， 第i天卖掉了股票）\n- 情形二（第i天持有股票）:  \n    dp[i][k][1]  =  max(dp[i-1][k][1], dp[i-1][k-1][0] - prices[i]) 分别为 (第i-1天就持有股票, 第i天买入股票)\n# base case:\n- dp[-1][k][0] = 0              ,未开始，未持有股票，收益为0\n-  dp[-1][k][1] = - float(\"inf\") ,未开始，不可能持有股票，初始化收益为负无穷大\n-  dp[i][0][0]  = 0              ,相当于不能交易，收益为0\n-  dp[i][0][1]  = - float(\"inf\") ,无交易，不可能有股票，初始化收益为负无穷大\n\n"},{"title":"训练一个检测熊猫的Mask RCNN模型","url":"/2020/04/24/mask-panda/","content":"[Detectron2](https://github.com/facebookresearch/detectron2) 是Facebook开源的目标检测和实例分割库，可以轻易的利用它来开发自己的目标检测或实例分割算法。\n\n现在利用它来开发一个检测熊猫的实例分割算法，[代码链接](https://github.com/genausz/mask-panda)。\n\n# 1.构建一个熊猫数据集（Pandaset）\n+ 安装youtube-dl库，下载15个熊猫视频。\n+ 从15个视频中选取12个作为训练集，2个作为验证集，1个作为测试集。将训练集和验证集视频各截取10张照片工140张照片用于标注。\n+ 下载VIA标注工具，标注140张照片。\n+ 将VIA输出的标注文件转换为COCO格式。\n\n\n\n# 2.训练Mask RCNN模型\n+ [安装detectron2](https://github.com/facebookresearch/detectron2/blob/master/INSTALL.md)\n+ 导入模型配置文件（COCO-InstanceSegmentation/mask_rcnn_R_50_C4_1x.yaml）\n+ “注册”标注的Pandaset\n+ 修改其他配置参数cfg.MODEL.ROI_HEADS.NUM_CLASSES等\n+ 训练模型\n+ 测试模型"},{"title":"图像分类，f1-score从0.78285提升到0.96563","url":"/2020/04/24/kaggle-flowers/","content":"在Kaggle上的[Flower Classification with TPUs](https://www.kaggle.com/c/flower-classification-with-tpus)的竞赛，针对104类花的图像分类。通过实验优化训练过程，使得从最开始的f1-score分数从0.78285提升到0.96563。通过实验发现，数据增强、学习率warmup+指数下降对模型性能的提升作用十分显著，网络结构上的优化及训练数据的扩充以及模型的组合也可以某种程度上提升metrics。\n\n\n|序号| 网络结构              | lr step下降 | lr指数下降 | 数据增强|Train(+Val)|F1-score| \n| - | ----                 | ---         | -        |-      |  -         |  -    |\n| 1 | ResNet152            |             |          |       |            |0.78285|\n| 2 | DenseNet201          |             |          |       |            |0.79546|\n| 3 | DenseNet201          |             |          | ✅    |            |0.84428|\n| 4 | DenseNet201          |      ✅     |          | ✅    |            |0.90046|\n| 5 | DenseNet201          |             | ✅       | ✅    |            |0.95032|\n| 6 | DenseNet201          |             | ✅       | ✅    |     ✅     |0.95644|\n| 7 | EfficientNetB7       |             | ✅       | ✅    |     ✅     |0.95959|\n| 8 | DenseNet201 + EfficientNetB7 |     | ✅       | ✅    |     ✅     |0.96563|\n\n"},{"title":"Machine Learning Roadmap","url":"/2020/04/02/MachineLearningRoadMap/","content":"\n# 监督学习\n- [ ] [线性回归(Linear Regression)](../LinearRegression/)\n- [ ] 逻辑回归(LR, Logistic Regression)\n- [ ] 决策树(Decision Tree)\n- [ ] 朴素贝叶斯(Naive Bayes)\n- [ ] 支持向量机(SVM, Support Vector Machine)\n- [ ] 集成学习(Ensemble learning)\n\n# 聚类（Cluster)\n- [ ] K-Means\n- [ ] DBSCAN\n- [ ] 高斯混合模型(GMM)\n  \n# 降维\n- [ ] 主成分分析(PCA)\n- [ ] 独立成分分析(ICA)\n"}]